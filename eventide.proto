syntax = "proto3";

import "google/protobuf/timestamp.proto";
// import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service MessageStore {
  rpc WriteMessage (WriteMessageReq) returns (WriteMessageResp);
  rpc GetStreamMessages (GetStreamMessagesReq) returns (MessageList);
  rpc GetCategoryMessages (GetCategoryMessagesReq) returns (MessageList);
  rpc GetLastMessage (GetLastMessageReq) returns (Message);
  rpc StreamVersion (StreamVersionReq) returns (StreamVersionResp);
}

message WriteMessageReq {
  string id = 1;
  string stream_name = 2;
  string type = 3;
  string data = 4; // jsonb
  string metadata = 5;
  int64 expected_version = 6;
}

message WriteMessageResp {
  int64 position = 1; // stream version
}

// CREATE OR REPLACE FUNCTION get_stream_messages(
//   _stream_name varchar,
//   _position bigint DEFAULT 0,
//   _batch_size bigint DEFAULT 1000,
//   _condition varchar DEFAULT NULL
// )
// RETURNS SETOF message
message GetStreamMessagesReq {
  string stream_name = 1;
  int64 position = 2;
  int64 batch_size = 3;
  string condition = 4;
}

// CREATE TYPE message AS (
//   id varchar,
//   stream_name varchar,
//   type varchar,
//   position bigint,
//   global_position bigint,
//   data varchar,
//   metadata varchar,
//   time timestamp
// );
message Message {
  string id = 1;
  string stream_name = 2;
  string type = 3;
  int64 position = 4;
  int64 global_position = 5;
  string data = 6; // jsonb
  string metadata = 7;
  google.protobuf.Timestamp time = 8;
}

message MessageList {
  repeated Message messages = 1;
}

// CREATE OR REPLACE FUNCTION get_category_messages(
//   _category_name varchar,
//   _position bigint DEFAULT 0,
//   _batch_size bigint DEFAULT 1000,
//   _condition varchar DEFAULT NULL
// )
// RETURNS SETOF message
message GetCategoryMessagesReq {
  string category_name = 1;
  int64 position = 2;
  int64 batch_size = 3;
  string condition = 4;
}

// CREATE OR REPLACE FUNCTION get_last_message(
//   _stream_name varchar
// )
// RETURNS SETOF message
message GetLastMessageReq {
  string stream_name = 1;
}

// CREATE OR REPLACE FUNCTION stream_version(
//   _stream_name varchar
// )
// RETURNS bigint
message StreamVersionReq {
  string stream_name = 1;
}

message StreamVersionResp {
  int64 version = 1;
}
